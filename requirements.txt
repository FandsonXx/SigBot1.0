aiohttp==3.8.3
aiosignal==1.3.1
async-generator==1.10
async-timeout==4.0.2
attrs==22.1.0
beautifulsoup4==4.11.1
bleach==5.0.1
bs4==0.0.1
certifi==2022.12.7
cffi==1.15.1
charset-normalizer==2.1.1
contourpy==1.0.6
cycler==0.11.0
dataframe-image==0.1.3
defusedxml==0.7.1
entrypoints==0.4
exceptiongroup==1.0.4
fastjsonschema==2.16.2
fonttools==4.38.0
frozenlist==1.3.3
h11==0.14.0
idna==3.4
importlib-metadata==5.1.0
Jinja2==3.1.2
json5==0.9.10
jsonschema==4.17.3
jupyter_client==7.4.8
jupyter_core==5.1.0
jupyterlab-pygments==0.2.2
kiwisolver==1.4.4
MarkupSafe==2.1.1
matplotlib==3.6.2
mistune==2.0.4
multidict==6.0.3
nbclient==0.7.2
nbconvert==7.2.6
nbformat==5.7.0
nest-asyncio==1.5.6
numpy==1.23.5
outcome==1.2.0
packaging==22.0
pandas==1.5.2
pandocfilters==1.5.0
Pillow==9.3.0
platformdirs==2.6.0
pycparser==2.21
Pygments==2.13.0
pyparsing==3.0.9
pyrsistent==0.19.2
PySocks==1.7.1
python-dateutil==2.8.2
pytz==2022.6
pyzmq==24.0.1
requests==2.28.1
selenium==4.7.2
six==1.16.0
sniffio==1.3.0
sortedcontainers==2.4.0
soupsieve==2.3.2.post1
tinycss2==1.2.1
tornado==6.2
traitlets==5.7.0
trio==0.22.0
trio-websocket==0.9.2
urllib3==1.26.13
webencodings==0.5.1
wsproto==1.2.0
yarl==1.8.2
zipp==3.11.0


from pathlib import Path
import EnviarResposta
import IniciarSessao
import RemoverArquivos
import key

caminho_salvapdf = Path(__file__)
caminho = caminho_salvapdf.parent

def criar_resposta(mensagem, primeiramensagem, idchat):

    mensagem = mensagem['message']['text']

    if primeiramensagem == True or mensagem.lower() in ('/menu', 'menu'):
        RemoverArquivos.remover()
        return f"""Ola Bem vindo ao sigBot.digite a opçao desejada abaixo
                   1. Notas/Faltas
                   2. Historico"""
    if mensagem == '1' or mensagem.lower() in ('/notas', 'notas') or key.identificador == 3:
        key.identificador = 1
        return f'''Otimo! agora digite seu login
                    *Seus dados nao serão salvos no sistema*'''
    if mensagem.lower() in ('histórico', '/histórico', '/historico', 'historico', '2') or key.identificador == 4:
        key.identificador = 2
        return f'''Otimo! agora digite seu login
                   *Seus dados nao serão salvos no sistema*
                    '''
    if len(mensagem) == 11:
        key.login = mensagem
        key.senha = 1
        return f'''agora digite sua senha
                  Se identificou algum erro digite o login novamente'''
    if  key.senha == 1:
        key.senha = mensagem
        return f'''Digite ok para continuar '''

    if key.identificador == 1 and key.senha != None:
        EnviarResposta.enviarImagem(caminho.parent / "img" / "wait.gif",idchat)
        ass = IniciarSessao.Sessao.login(key.login, key.senha, 1)
        key.identificador = validarLogin(ass,key.identificador)
        if key.identificador == 3:
            return 'Ops Senha invalida digite "ok" para tentar novamente '
        EnviarResposta.enviarImagem(caminho.parent / "files" / "notas.png",idchat)
        key.login = None
        key.senha = None
        key.identificador =None
        return f'''para retornar digite menu '''
    if key.identificador == 2 and key.senha != None:
        EnviarResposta.enviarImagem(caminho.parent / "img" / "wait.gif",idchat)
        ass = IniciarSessao.Sessao.login(key.login, key.senha, 2)
        key.identificador = validarLogin(ass,key.identificador)
        if key.identificador == 4:
            return 'Ops Senha invalida digite "ok" para tentar novamente '
        pdf = caminho.parent / "files" / "./historico_{}.pdf".format(ass)
        EnviarResposta.enviarPdf(pdf,idchat)
        key.login = None
        key.senha = None
        key.identificador = None
        return f'''para retornar digite menu '''
    else:
        return 'açao invalida digite o numero correto ou /menu'


def validarLogin(ass,identificador):
        if ass == 1:
            if identificador == 1:
                return 3
            if identificador == 2:
                return 4
        else:
            return ass